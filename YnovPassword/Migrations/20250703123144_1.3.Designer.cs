// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YnovPassword.Modele;

#nullable disable

namespace YnovPassword.Migrations
{
    [DbContext(typeof(PasswordContext))]
    [Migration("20250703123144_1.3")]
    partial class _13
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("YnovPassword.Modele.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeProfileId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TypeProfileId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("YnovPassword.Modele.DBUtilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DBUtilisateur");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Robert",
                            IsAdmin = true,
                            MotDePasse = "a854b1b2a415b94f545c9490e86eb92c7da6c643f2afce6b69c672ba0ba3be0c",
                            Nom = "DeMadrido",
                            Prenom = "Roberto"
                        });
                });

            modelBuilder.Entity("YnovPassword.Modele.Dictionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mot")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Dictionnaires");
                });

            modelBuilder.Entity("YnovPassword.Modele.TypeProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TypeProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Netflix"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Discord"
                        });
                });

            modelBuilder.Entity("YnovPassword.Modele.Account", b =>
                {
                    b.HasOne("YnovPassword.Modele.TypeProfile", "TypeProfile")
                        .WithMany("Accounts")
                        .HasForeignKey("TypeProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YnovPassword.Modele.DBUtilisateur", "Utilisateur")
                        .WithMany("Accounts")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeProfile");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("YnovPassword.Modele.DBUtilisateur", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("YnovPassword.Modele.TypeProfile", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
